#####################################################################################
library(celldex)
library(SingleR)
library(dplyr)
library(Seurat)
library(patchwork)
library(gridExtra)
library(ggplot2)
library(SeuratObject)
library(Seurat)
library(SingleR)
#####################################################################################
# DatabaseImmuneCellExpressionData
# The DICE reference consists of bulk RNA-seq samples of sorted cell populations from the project of the same name (Schmiedel et al. 2018).
# MouseRNAseqData
# This reference consists of a collection of mouse bulk RNA-seq data sets downloaded from the gene expression omnibus (Benayoun et al. 2019). A variety of cell types are available, again mostly from blood but also covering several other tissues.
# ImmGenData
# The ImmGen reference consists of microarray profiles of pure mouse immune cells from the project of the same name (Heng et al. 2008). This is currently the most highly resolved immune reference - possibly overwhelmingly so, given the granularity of the fine labels.
#####################################################################################
load("./hypotha_wnn.RData")
load("./reference.RData")

# Finding differentially expressed features (cluster biomarkers)
hypho=reference
hypho=JoinLayers(hypho, assay = "RNA")

# Calulate predicted annotation
MouseRNAseqData <- MouseRNAseqData()
ImmGenData <- ImmGenData()
DatabaseImmuneCellExpressionData <- celldex::DatabaseImmuneCellExpressionData()

# Annotate celltype
MouseRNAseqData.hypho                                 <- SingleR(test=GetAssayData(hypho, assay = "RNA", slot = "data"), ref=MouseRNAseqData, labels=MouseRNAseqData$label.main)
ImmGenData.hypho                                      <- SingleR(test=GetAssayData(hypho, assay = "RNA", slot = "data"), ref=ImmGenData, labels=ImmGenData$label.main)
DatabaseImmuneCellExpressionData.hypho                <- SingleR(test=GetAssayData(hypho, assay = "RNA", slot = "data"), ref=DatabaseImmuneCellExpressionData, labels=DatabaseImmuneCellExpressionData$label.main)

hypho[["predicted.MouseRNAseqData"]]                  <- MouseRNAseqData.hypho$labels
hypho[["predicted.ImmGenData"]]                       <- ImmGenData.hypho$labels
hypho[["predicted.DatabaseImmuneCellExpressionData"]] <- DatabaseImmuneCellExpressionData.hypho$labels
#####################################################################################
# Copy the UMAP
hypotha_MouseRNAseq                          <- hypotha_wnn
hypotha_ImmGenData                           <- hypotha_wnn
hypotha_DatabaseImmuneCellExpression         <- hypotha_wnn

# Reset identities
Idents(hypotha_MouseRNAseq)                   <-MouseRNAseqData.hypho[names(Idents(hypotha_MouseRNAseq)),"pruned.labels"]
Idents(hypotha_ImmGenData)                    <-ImmGenData.hypho[names(Idents(hypotha_ImmGenData)),"pruned.labels"]
Idents(hypotha_DatabaseImmuneCellExpression)  <-DatabaseImmuneCellExpressionData.hypho[names(Idents(hypotha_DatabaseImmuneCellExpression)),"pruned.labels"]

# Calculate plots
plot.hypotha_MouseRNAseq          <- DimPlot(hypotha_MouseRNAseq, label=TRUE, reduction = "wnn.umap" ) + theme_bw() +ggtitle("MouseRNAseqData")
plot.hypotha_ImmGenData           <- DimPlot(hypotha_ImmGenData,label=TRUE, reduction = "wnn.umap" ) + theme_bw()+ggtitle("ImmGenData")
plot.DatabaseImmuneCellExpression <- DimPlot(hypotha_DatabaseImmuneCellExpression, label=TRUE , reduction = "wnn.umap") + theme_bw()+ggtitle("DatabaseImmuneCellExpressionData")
plot.hypotha_wnn                  <- DimPlot(hypotha_wnn, label=TRUE, reduction = "wnn.umap" ) + theme_bw()+ggtitle("Reference annotation")

#####################################################################################
# FindClusters_resolution
output_dir="/home/felipe/results_seurat/"    
png(filename=paste(output_dir,"joint_Cluster_annotations.png",sep=""), width = 25, height = 25, res=600, units = "cm")
	grid.arrange(plot.hypotha_wnn,plot.DatabaseImmuneCellExpression,plot.hypotha_ImmGenData, plot.hypotha_MouseRNAseq ,ncol = 2)
dev.off()
#####################################################################################
# Subselect only clusters 9 and 10
# Reload object
load("./hypotha_wnn.RData")

# Make copy
hypotha_wnn_AUC<-hypotha_wnn

# Get expression matrix
exprMatrix= hypotha_wnn[["SCT"]]@scale.data

# Markers set
markersSets <- list(Neurons=c("Avp","Snap25"),Astrocytes=c("Agt"),Microglia=c("Ctss"),OPCs=c("Pdgfra"),Oligodendrocytes=c("Mbp","Mobp"))

# Calculate cellranking
cells_rankings <- AUCell_buildRankings(exprMatrix, plotStats=TRUE)

# Calculate enrichment scores
cells_AUC <- AUCell_run(exprMatrix, markersSets, aucMaxRank=nrow(cells_rankings)*0.05)

# Determine the cells with the given gene signatures or active gene sets
cells_assignment <- AUCell_exploreThresholds(cells_AUC, plotHist=TRUE, assign=TRUE) 

# Assign
Idents(hypotha_wnn_AUC)[cells_assignment$Neurons$assignment]<-"Neurons"
Idents(hypotha_wnn_AUC)[cells_assignment$Microglia$assignment]<-"Microglia"
Idents(hypotha_wnn_AUC)[cells_assignment$OPCs$assignment]<-"OPCs"
Idents(hypotha_wnn_AUC)[cells_assignment$Oligodendrocytes$assignment]<-"Oligodendrocytes"
Idents(hypotha_wnn_AUC)[cells_assignment$Astrocytes$assignment]<-"Astrocytes"

# Create plots
plot.hypotha_wnn_AUC          <- DimPlot(hypotha_wnn_AUC, label=TRUE, reduction = "wnn.umap" ) + theme_bw() +ggtitle("AUCell")




##############################################################################################################################################3
load("./neurons.RData")

# Find Clusters
neurons <- FindClusters(neurons, graph.name = "wsnn", algorithm = 1, resolution = 0.7, verbose = FALSE)

# Markers set
markersSets <- list(Magnocellular_1=c("Oxt"),Magnocellular_2=c("Avp"),Magnocellular_3=c("Caprin2"),Magnocellular_4=c("Oxt","Caprin2","Avp"))

# Calculate cellranking
cells_rankings <- AUCell_buildRankings(exprMatrix, plotStats=TRUE)

# Calculate enrichment scores
cells_AUC <- AUCell_run(exprMatrix, markersSets, aucMaxRank=nrow(cells_rankings)*0.05)

# Determine the cells with the given gene signatures or active gene sets
cells_assignment <- AUCell_exploreThresholds(cells_AUC, plotHist=TRUE, assign=TRUE) 

clusters_name<-as.vector(Idents(neurons))
names(clusters_name)<-names(Idents(neurons))
clusters_name<-"Other"

# Assign
clusters_name[cells_assignment$Magnocellular_1$assignment]<-"Oxt"
clusters_name[cells_assignment$Magnocellular_2$assignment]<-"Avp"
clusters_name[cells_assignment$Magnocellular_3$assignment]<-"Caprin2"
clusters_name[cells_assignment$Magnocellular_4$assignment]<-"Oxt + Caprin2+ Avp"

# Stash cell identity classes in metadata
neurons[["Prediction"]] <- factor(clusters_name)

# Subset per group
Oxt               <- subset(neurons, idents = "Oxt")
Oxt_Caprin2_Avp   <- subset(neurons, idents = "Oxt + Caprin2")

# Create plots
plot.hypotha_Oxt              <- DimPlot(Oxt, label=TRUE, group.by = "Prediction",reduction = "wnn.umap" ) + theme_bw() +ggtitle("AUCell")
plot.hypotha_Oxt_Caprin2_Avp  <- DimPlot(Oxt_Caprin2_Avp, label=TRUE, group.by = "Prediction",reduction = "wnn.umap" ) + theme_bw() +ggtitle("AUCell")

grid.arrange(plot.hypotha_Oxt,plot.hypotha_Oxt_Caprin2_Avp,ncol = 2)

