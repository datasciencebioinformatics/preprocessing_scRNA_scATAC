library(dplyr)
library(Seurat)
library(patchwork)
library(gridExtra)
library(ggplot2)
library(plyr)
library(SeuratObject)
library(Seurat)
library("harmony")
library(rhdf5)
library("hdf5r")
library("Signac")
library(Seurat)
options(Seurat.object.assay.version = "v5")
library(Signac)
library(EnsDb.Mmusculus.v79)
library(dplyr)
library(ggplot2)
library(loupeR)
colour=c('Astrocytes' ='#fde725','OPCs' ='#5ec962','Microglia' ='#21918c','Neurons'='#3b528b','Oligodendrocytes'='#440154')
#####################################################################################
output_dir="/home/felipe/results_seurat/"
#output_dir="/home/singlecell/results_seurat/"
#####################################################################################
# ATAC analysis add gene annotation information
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevelsStyle(annotations) <- "UCSC"
genome(annotations) <- "mm10"

#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
#annotations <- transcripts(TxDb.Mmusculus.UCSC.mm10.knownGene)
#####################################################################################
# Read CSV into DataFrame
#Barcode_arc_RNA_ATAC = read.csv('/home/singlecell/database/Barcode_arc_RNA_ATAC',sep="\t")
Barcode_arc_RNA_ATAC = read.csv('/home/felipe/database/Barcode_arc_RNA_ATAC',sep="\t")
#####################################################################################
# Set number of samples
n_samples=3

# Create list to save seurat objects for ATAC
list_ATAC_gr=list()
list_ATAC_fr=list()
list_ATAC_peaks=list()
list_ATAC_chrom_assay=list() 
list_ATAC_list_ATAC_hypotha=list()

# For each sample
for (sample in 1:n_samples)
{	
	###### First the ATAC folder
	# Set intput dir ATAC-M1 and seurat objects
	ATAC_file_h5           <-  paste("/home/felipe/snATACSeq_out/ATAC-M",sample,"/filtered_peak_bc_matrix.h5",sep="")
	ATAC_singlecell_file   <-  paste("/home/felipe/snATACSeq_out/ATAC-M",sample,"/singlecell.csv",sep="")
	ATAC_fragment_file     <-  paste("/home/felipe/snATACSeq_out/ATAC-M",sample,"/fragments.tsv.gz",sep="") 
	
	# Set intput dir ATAC-M1 and seurat objects
	ATAC_h5             <-  Read10X_h5(ATAC_file_h5)
	ATAC_singlecell     <-  read.csv(file = ATAC_singlecell_file,header = TRUE,row.names = 1)
	ATAC_fragment       <-  CreateFragmentObject(ATAC_fragment_file)
	ATAC_chrom_assay    <-  CreateChromatinAssay(counts = ATAC_h5,sep = c(":", "-"), annotation = annotations,fragments =ATAC_fragment_file)
	ATAC_hypotha        <-  CreateSeuratObject(counts = ATAC_chrom_assay,assay = "peaks")
	ATAC_peaks	    <-  CallPeaks(object = ATAC_hypotha)	
	ATAC_gr 	    <-  makeGRangesFromDataFrame(ATAC_peaks)

	# Add object to list
	list_ATAC_peaks[[paste("ATAC-M",sample,sep="")]]<-ATAC_peaks
	list_ATAC_chrom_assay[[paste("ATAC-M",sample,sep="")]]<-ATAC_chrom_assay
	list_ATAC_gr[[paste("ATAC-M",sample,sep="")]]<-ATAC_gr	
	list_ATAC_fr[[paste("ATAC-M",sample,sep="")]]<-ATAC_fragment		
}
#####################################################################################
save(list_ATAC_gr, file =              "./list_ATAC_gr.RData")                      #
save(list_ATAC_fr, file =              "./list_ATAC_fr.RData")                      #
save(list_ATAC_peaks, file =           "./list_ATAC_peaks.RData")                   #
save(list_ATAC_fr, file =              "./list_ATAC_fr.RData")                      #
save(list_ATAC_chrom_assay, file =     "./list_ATAC_chrom_assay.RData")             #
#####################################################################################
# load("./list_ATAC_peaks.RData")                                                   #
# load("./list_ATAC_fr.RData")                                                      # 
# load("./list_ATAC_gr.RData")     						    #
#####################################################################################
# Create a unified set of peaks to quantify in each dataset
# Combined peaks I can use directly from reduce
combined.peaks <- reduce(x = c(list_ATAC_gr[[1]],list_ATAC_gr[[2]],list_ATAC_gr[[3]]))
#combined.peaks <- reduce(x = c(list_ATAC_gr[[1]],list_ATAC_gr[[2]],list_ATAC_gr[[3]],list_ATAC_gr[[4]],list_ATAC_gr[[5]],list_ATAC_gr[[6]]))

# Combined peaks I can use directly from intersect
combined.cells <-  intersect(intersect(Cells(list_ATAC_chrom_assay[[1]]), Cells(list_ATAC_chrom_assay[[2]])),Cells(list_ATAC_chrom_assay[[3]]))
#combined.cells <-  intersect(intersect(intersect(intersect(Cells(list_ATAC_chrom_assay[[1]]), Cells(list_ATAC_chrom_assay[[2]])),Cells(list_ATAC_chrom_assay[[3]])),list_ATAC_chrom_assay[[4]]),list_ATAC_chrom_assay[[5]]),list_ATAC_chrom_assay[[6]])

# Filter out bad peaks based on length
peakwidths <- width(combined.peaks)
#####################################################################################
# Take too the combined 
combined.cells <- unique(vector_cell_names)
#####################################################################################
list_ATAC_peaks=list()

# Data frame with barcodes and experiment
df_ATAC_barcode=data.frame(Barcode_ATAC=c(),Sample=c())

# For each sample
for (sample in 1:n_samples)
{ 
	# Quantify peaks in each dataset 
	ATAC_counts <- FeatureMatrix(
	  fragments = list_ATAC_fr[[sample]],
	  features = combined.peaks,
	  cells = rownames(list_ATAC_fr[[sample]])
	)
	# For each sample, cerate chrom_assay and atac obje
	ATAC_chrom_assay         <-  CreateChromatinAssay(counts = ATAC_counts,fragments =list_ATAC_fr[[sample]])
	ATAC_obje                <- CreateSeuratObject(ATAC_chrom_assay, assay = "ATAC")
	ATAC_obje                <- AddMetaData(object = ATAC_obje,metadata = sample, col.name = 'Sample' )
	list_ATAC_peaks[[sample]]<-ATAC_obje

	# Take barcode
	df_ATAC_barcode=rbind(df_ATAC_barcode,data.frame(Cells=Cells(ATAC_obje),Barcode=substring(Cells(ATAC_obje),1,16),Sample=sample)) 
}
#####################################################################################
save(list_ATAC_peaks, file = "./list_ATAC_peaks.RData")
load("./list_ATAC_peaks.RData")
#####################################################################################
# https://stuartlab.org/signac/articles/merging
# Change names
# Check merged objects
# merge
ATAC_objects_combined <- merge(
  x = list_ATAC_peaks[[1]],
  y = list_ATAC_peaks[2:length(names(list_ATAC_peaks))],
  merge.data = TRUE,
  add.cell.ids = names(list_ATAC_peaks)
)
#####################################################################################
save(ATAC_objects_combined, file = "./ATAC_objects_combined.RData")
load("./ATAC_objects_combined.RData")
#####################################################################################
# Add batch normalation here 1
# Fix ATAC UMAP parameters here 2
# Run Harmony
ATAC_objects_combined <- RunTFIDF(ATAC_objects_combined)
ATAC_objects_combined <- FindTopFeatures(ATAC_objects_combined, min.cutoff = 20)
ATAC_objects_combined <- RunSVD(ATAC_objects_combined)
ATAC_objects_combined <- RunHarmony(ATAC_objects_combined, group.by.vars = c('Sample'),reduction = "lsi", assay.use = "ATAC", reduction.save = "harmony")
ATAC_objects_combined <- RunUMAP(ATAC_objects_combined, dims = 2:50, reduction = 'lsi')
#####################################################################################
save(ATAC_objects_combined, file = "./ATAC_objects_combined.RData")
#####################################################################################
# Set number of samples
n_samples=3

# Create list to save seurat objects for ATAC
list_RNA_obj=list() 

# Data frame with barcodes and experiment
df_RNA_barcode=data.frame(Barcode_RNA=c(),Sample=c())

# For each sample
for (sample in 1:n_samples)
{
	###### First the ATAC folder
	# Set intput dir ATAC-M1 and seurat objects filtered_feature_bc_matrix.h5
	RNA_file_h5            <-  paste("/home/felipe/snRNASeq_output/cDNA-M",sample,"/outs/filtered_feature_bc_matrix.h5",sep="")
	
	# Set intput dir ATAC-M1 and seurat objects
	RNA_h5                 <-  Read10X_h5(RNA_file_h5)

	# Set intput dir ATAC-M1 and seurat objects
	RNA_hypotha            <- CreateSeuratObject(counts = RNA_h5, project = "cDNA-M1", assay = "RNA")

	# Create
	df_RNA<-data.frame(Names=Cells(RNA_hypotha),IDs=substring(Cells(RNA_hypotha),1,16))

	# Trnalte RNA to ATAC
	df_RNA$ATAC<-Barcode_arc_RNA_ATAC[Barcode_arc_RNA_ATAC$RNA %in% df_RNA$IDs,"ATAC"]
	
	# Create ATAC-RNA
	df_RNA$RNA_translation<-paste(paste(Barcode_arc_RNA_ATAC[Barcode_arc_RNA_ATAC$RNA %in% df_RNA$IDs,"ATAC"],substring(df_RNA$Names,17,18),sep=""),sample,sep="_")
	
	# S3 method for DimReduc
	RNA_hypotha<-RenameCells(RNA_hypotha, new.names = df_RNA[Cells(RNA_hypotha) %in% df_RNA$Names,"RNA_translation"])

	# Save dataset
	RNA_hypotha$dataset<-paste("cDNA-M",sample,sep="")
	
	# S3 method for DimReduc
	RNA_hypotha                <- AddMetaData(object = RNA_hypotha,metadata = sample, col.name = 'Sample' )

        # Take barcode
        df_RNA_barcode=rbind(df_RNA_barcode,data.frame(Cells=Cells(RNA_hypotha),Barcode=substring(Cells(RNA_hypotha),1,16),Sample=sample)) 
	
	# Add object to list
	list_RNA_obj[[paste("cDNA-M",sample,sep="")]]<-RNA_hypotha
}
#####################################################################################
save(list_RNA_obj, file =              "./list_RNA_obj.RData")                      #
#####################################################################################
# Merge samples
RNA_objects_combined <- merge(
  x = list_RNA_obj[[1]],
  y = list_RNA_obj[2:length(names(list_RNA_obj))],
  merge.data = TRUE
)
#####################################################################################
# Calculate FindVariableFeatures
# Add batch normalation here 1
# Fix RNA UMAP parameters here 2
RNA_objects_FindVariableFeatures <- FindVariableFeatures(object=RNA_objects_combined , selection.method = "vst",nfeatures = 3000) # Consider the 2000 genes
RNA_objects_combined             <- NormalizeData(RNA_objects_combined, normalization.method = "LogNormalize", scale.factor = 10000)
RNA_objects_combined             <- ScaleData(RNA_objects_combined,block.size = 1000,do.scale = TRUE,do.center = TRUE,features=VariableFeatures(object = RNA_objects_FindVariableFeatures))
RNA_objects_combined             <- RunPCA(RNA_objects_combined, features = VariableFeatures(object = RNA_objects_FindVariableFeatures))
RNA_objects_combined             <- RunHarmony(RNA_objects_combined, group.by.vars = c('Sample'),reduction = "pca", assay.use = "PCA", reduction.save = "harmony")
RNA_objects_combined             <- RunUMAP(RNA_objects_combined, dims = 1:50,reduction = "harmony")
#####################################################################################
# For each sample
n_samples=3

# Rename cells
RNA_objects_combined$dataset<-paste(substring(Cells(RNA_objects_combined),1,7))
ATAC_objects_combined$dataset<-paste("ATAC-M",substring(Cells(ATAC_objects_combined),20,20),sep="")

# Quality control - add  too mitocondrial percentage to quality control plot
#DimPlot_ATAC_objects_combined<-DimPlot(ATAC_objects_combined, pt.size = 0.1,raster=FALSE) + ggtitle("ATAC-M1/M2/M3") + theme(legend.position = "none") 
#DimPlot_RNA_objects_combined<-DimPlot(RNA_objects_combined, pt.size = 0.1, raster=FALSE) + ggtitle("cDNA-M1/M2/M3") + theme(legend.position = "none") 
DimPlot_ATAC_objects_combined<-DimPlot(ATAC_objects_combined, label = FALSE,group.by = 'dataset',raster=FALSE, pt.size = 0.1) + ggtitle("ATAC-M1/M2/M3") #+ theme(legend.position = "none") 
DimPlot_RNA_objects_combined<-DimPlot(RNA_objects_combined, label = FALSE,group.by = 'dataset', pt.size = 0.1) + ggtitle("cDNA-M1/M2/M3") #+ theme(legend.position = "none") 

# FindClusters_resolution
output_dir="/home/felipe/results_seurat/"
png(filename=paste(output_dir,"DimPlotsRaw.png",sep=""), width = 24, height = 12, res=600, units = "cm")
	grid.arrange(DimPlot_ATAC_objects_combined, DimPlot_RNA_objects_combined, nrow = 1)
dev.off()
#####################################################################################
save(RNA_objects_combined, file = "./RNA_objects_combined.RData")                   #
save(ATAC_objects_combined, file = "./ATAC_objects_combined.RData")                 #
save(df_RNA_barcode, file = "./df_RNA_barcode.RData")                               #
######################################################################################
# Create a bar plot with number of cell per sample ATAC
# Create a bar plot with number of cell per sample RNA
# Create a bar plot with number of common cell RNA+ATAC
# list_RNA_objects      
# list_ATAC_chrom_assay 
# n_samples
# For each sample
load("./list_RNA_obj.RData")
load("./list_ATAC_chrom_assay.RData")
#####################################################################################
df_cells<-data.frame(RNA=c(),ATAC=c(),MULTIOME=c())
# Read CSV into DataFrame
Barcode_arc_RNA_ATAC = read.csv('/home/felipe/database/Barcode_arc_RNA_ATAC',sep="\t")
for (sample in 1:n_samples)
{			
	# Create
	df_ATAC<-data.frame(Names=Cells(list_ATAC_chrom_assay[[sample]]),IDs=substring(Cells(list_ATAC_chrom_assay[[sample]]),1,16))
	df_RNA<-data.frame(Names=Cells(list_RNA_obj[[sample]]),IDs=substring(Cells(list_RNA_obj[[sample]]),1,16))
	
	# Create ATAC-RNA
	df_ATAC$RNA<-paste(Barcode_arc_RNA_ATAC[Barcode_arc_RNA_ATAC$ATAC %in% df_ATAC$IDs,"RNA"],substring(df_ATAC$Names,17,18),sep="")
	
	# S3 method for DimReduc
	list_ATAC_chrom_assay[[sample]]<-RenameCells(list_ATAC_chrom_assay[[sample]], new.names = df_ATAC[which(df_ATAC$Names %in% Cells(list_ATAC_chrom_assay[[sample]])),"RNA"])
	#####################################################################################
	# Create combined multiome object
	combined.cell<-Cells(list_ATAC_chrom_assay[[sample]])[Cells(list_ATAC_chrom_assay[[sample]]) %in% Cells(list_RNA_obj[[sample]])]
	#####################################################################################
	# Take the number of cells
	nCells_ATAC     =length(Cells(list_ATAC_chrom_assay[[sample]]))
	nCells_RNA      =length(Cells(list_RNA_obj[[sample]]))
	nCells_MULTIOME = length(combined.cell)
	df_cells<-rbind(df_cells,data.frame(nCells_RNA,nCells_ATAC,nCells_MULTIOME))
}
rownames(df_cells)<-paste("Sample", 1:n_samples,sep=" ") # Set rownames
colnames(df_cells)<-c("RNA","ATAC","MULTIOME")
# Melt table
m_df_cells<-melt(t(df_cells))

# Colnames(m_df_cells)
colnames(m_df_cells)<-c("Experiment","Sample","nCells")

# Plot number of cells
plot_nCells<-m_df_cells %>%  ggplot(aes(x=Sample,y=nCells)) +  geom_col(fill="black") + theme_bw() + facet_grid(. ~ Experiment) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

output_dir="/home/felipe/results_seurat/"

# FindClusters_resolution
png(filename=paste(output_dir,"plot_number_of_cells.png",sep=""), width = 14, height = 6, res=600, units = "cm")
	plot_nCells
dev.off()
#####################################################################################
