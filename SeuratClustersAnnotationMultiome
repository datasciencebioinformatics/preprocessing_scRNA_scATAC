library(dplyr)
library(Seurat)
library(patchwork)
library(gridExtra)
library(ggplot2)
library(plyr)
library(SeuratObject)
library(Seurat)
library("harmony")
library(rhdf5)
library("hdf5r")
library("Signac")
library(Seurat)
options(Seurat.object.assay.version = "v5")
library(Signac)
library(EnsDb.Mmusculus.v79)
library(dplyr)
library(ggplot2)
library(loupeR)
colour=c('Astrocytes' ='#fde725','OPCs' ='#5ec962','Microglia' ='#21918c','Neurons'='#3b528b','Oligodendrocytes'='#440154')
#####################################################################################
output_dir="/home/felipe/results_seurat/"
#output_dir="/home/singlecell/results_seurat/"
#####################################################################################
# ATAC analysis add gene annotation information
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevelsStyle(annotations) <- "UCSC"
genome(annotations) <- "mm10"

#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
#annotations <- transcripts(TxDb.Mmusculus.UCSC.mm10.knownGene)
#####################################################################################
# Set intput dir ATAC-M1 and seurat objects
ATAC_M1_h5             <-  Read10X_h5("/home/felipe/snATACSeq_out/ATAC-M1/outs/filtered_peak_bc_matrix.h5")
ATAC_M1_singlecell     <-  read.csv(file = "/home/felipe/snATACSeq_out/ATAC-M1/outs/singlecell.csv",header = TRUE,row.names = 1)
ATAC_M1_fragment_file  <-  "/home/felipe/snATACSeq_out/ATAC-M1/outs/fragments.tsv.gz"
ATAC_M1_fragment       <-  CreateFragmentObject(ATAC_M1_fragment_file)
ATAC_M1_chrom_assay    <-  CreateChromatinAssay(counts = ATAC_M1_h5,sep = c(":", "-"), annotation = annotations,fragments ='/home/felipe/snATACSeq_out/ATAC-M1/outs/fragments.tsv.gz')
ATAC_M1.hypotha        <-  CreateSeuratObject(counts = ATAC_M1_chrom_assay,assay = "peaks")
ATAC_M1_counts         <-  FeatureMatrix(fragments = ATAC_M1_fragment,features = granges(ATAC_M1.hypotha))
#####################################################################################
# Save whole workspace to working directory
cDNA_M1_h5          <- Read10X_h5("/home/felipe/snRNASeq_output/cDNA-M1/outs/filtered_feature_bc_matrix.h5")
# Load table for all sample - aggreagate cellranger for the six samples
cDNA_M1.hypotha <- CreateSeuratObject(counts = cDNA_M1_h5, project = "cDNA-M1", assay = "RNA")
# The [[ operator can add columns to object metadata. This is a great place to stash QC stats
cDNA_M1.hypotha[["percent.mt"]] <- PercentageFeatureSet(cDNA_M1.hypotha, pattern = "mt")
# Subset percent.mt < 2
cDNA_M1.hypotha = subset(cDNA_M1.hypotha, subset = percent.mt < 2)
#####################################################################################
# Try again and check the assay cDNA_M1.hypotha with the name "RNA"
hypotha.atac.merge.samples<- ATAC_M1.hypotha
hypotha.rna.merge.samples <- cDNA_M1.hypotha
#save(hypotha.atac.merge.samples,file="./hypotha.atac.merge.samples.RData")
#save(hypotha.rna.merge.samples ,file="./hypotha.merge.rna.samples.RData")

#load("./hypotha.atac.merge.samples.RData")
#load("./hypotha.merge.rna.samples.RData")
ATAC_M1.hypotha=hypotha.atac.merge.samples
cDNA_M1.hypotha=hypotha.rna.merge.samples
#####################################################################################
# Read CSV into DataFrame
Barcode_arc_RNA_ATAC = read.csv('/home/singlecell/database/Barcode_arc_RNA_ATAC',sep="\t")
Barcode_arc_RNA_ATAC = read.csv('/home/felipe/database/Barcode_arc_RNA_ATAC',sep="\t")

# Create
df_ATAC<-data.frame(Names=Cells(ATAC_M1.hypotha),IDs=substring(Cells(ATAC_M1.hypotha),1,16))
df_RNA<-data.frame(Names=Cells(cDNA_M1.hypotha),IDs=substring(Cells(cDNA_M1.hypotha),1,16))

# Create ATAC-RNA
df_ATAC$RNA<-paste(Barcode_arc_RNA_ATAC[Barcode_arc_RNA_ATAC$ATAC %in% df_ATAC$IDs,"RNA"],substring(df_ATAC$Names,17,18),sep="")

# S3 method for DimReduc
ATAC_M1.hypotha<-RenameCells(ATAC_M1.hypotha, new.names = df_ATAC[which(df_ATAC$Names %in% Cells(ATAC_M1.hypotha)),"RNA"])
#####################################################################################
# Create combined multiome object
combined.cell<-Cells(ATAC_M1.hypotha)[Cells(ATAC_M1.hypotha) %in% Cells(cDNA_M1.hypotha)]

# add the ATAC-seq assay
grange.counts <- StringToGRanges(rownames(ATAC_M1_h5), sep = c(":", "-"))

# Use grange
grange.use <- seqnames(grange.counts) %in% standardChromosomes(grange.counts)

# Combine datasets with same cells
ATAC_M1.hypotha.combined <- ATAC_M1.hypotha[,combined.cell]
cDNA_M1.hypotha.combined <- cDNA_M1.hypotha[,combined.cell]

#save(ATAC_M1.hypotha.combined, file = "./ATAC_M1.hypotha.combined.RData")
#save(cDNA_M1.hypotha.combined, file = "./cDNA_M1.hypotha.combined.RData")
#load("./ATAC_M1_hypotha.combined.RData")
#load("./cDNA_M1.hypotha.combined.RData")
#####################################################################################
# I stopped here 
# try to do this https://stuartlab.org/signac/articles/hypotha_multiomic
# create a Seurat object containing the RNA adata
hypotha <- cDNA_M1.hypotha.combined

# create ATAC assay and add it to the object
hypotha[["ATAC"]] <- ATAC_M1.hypotha.combined[["peaks"]]
#####################################################################################
# Quality control 
DefaultAssay(hypotha) <- "ATAC"

hypotha <- NucleosomeSignal(hypotha)
hypotha <- TSSEnrichment(hypotha,assay ="ATAC", tss.positions =grange.counts)

# FindClusters_resolution
png(filename=paste(output_dir,"plot_VlnPlot_rna_atac.png",sep=""), width = 24, height = 12, res=600, units = "cm")
	VlnPlot(object = hypotha, features = c("nCount_RNA", "nCount_ATAC", "TSS.enrichment", "nucleosome_signal"),ncol = 4,pt.size = 0)
dev.off()
#####################################################################################
#save(hypotha, file = "./hypotha.RData")
#####################################################################################
# call peaks using MACS2
peaks <- CallPeaks(hypotha)

# remove peaks on nonstandard chromosomes and in genomic blacklist regions
peaks <- keepStandardChromosomes(peaks, pruning.mode = "coarse")
peaks <- subsetByOverlaps(x = peaks, ranges = blacklist_mm10, invert = TRUE)

#####################################################################################
save(peaks, file = "./peaks.RData")
#####################################################################################
# quantify counts in each peak
macs2_counts <- FeatureMatrix(
  fragments = Fragments(hypotha[["ATAC"]]),
  features = peaks,
  cells = colnames(hypotha)
)
# create a new assay using the MACS2 peak set and add it to the Seurat object
hypotha[["peaks"]] <- CreateChromatinAssay(
  counts = macs2_counts,
  fragments = Fragments(hypotha[["ATAC"]]),
  annotation = annot
)
#####################################################################################
save(hypotha, file = "./hypotha.RData") # I stopped here
#load("./hypotha.RData") # I stopped here
#####################################################################################
# Gene expression data processing 
DefaultAssay(hypotha) <- "RNA"
hypotha <- NormalizeData(hypotha, normalization.method = "LogNormalize", scale.factor = 10000)
hypotha <- SCTransform(hypotha)
hypotha <- RunPCA(hypotha)
#####################################################################################
#save(hypotha, file = "./hypotha.RData") # Save hypotha Step 1
#####################################################################################
#DNA accessibility data processing 
DefaultAssay(hypotha) <- "ATAC"
hypotha <- FindTopFeatures(hypotha, min.cutoff = 10)
hypotha <- RunTFIDF(hypotha)
hypotha <- RunSVD(hypotha)
#####################################################################################
#save(hypotha, file = "./hypotha.RData") # Save hypotha Step 2
#####################################################################################
# Annotating cell types 
# build a joint neighbor graph using both assays
hypotha <- FindMultiModalNeighbors(
  object = hypotha,
  reduction.list = list("pca", "lsi"), 
  dims.list = list(1:20, 2:50),k.nn = 50
)
#####################################################################################
#save(hypotha, file = "./hypotha.RData") # Save hypotha Step 3
#####################################################################################
# build a joint UMAP visualization
hypotha <- RunUMAP(
  object = hypotha, 
  nn.name = "weighted.nn", reduction.name = "wnn.umap", reduction.key = "wnnUMAP_"
)
#####################################################################################
#save(hypotha, file = "./hypotha.RData") # Save hypotha Step 4
#####################################################################################
# Create DimMap
DimPlot_Multim_rna_atac<-DimPlot(hypotha, label = TRUE, repel = TRUE, group.by = "ident", reduction = "wnn.umap",cols=colour) + ggtitle("Multimodal RNA+ATC M1")+ NoLegend()

#####################################################################################
# FindClusters_resolution
hypotha.2 <- RunUMAP(hypotha, nn.name = "weighted.nn", reduction.name = "wnn.umap", reduction.key = "wnnUMAP_")
hypotha.2 <- FindClusters(hypotha.2, graph.name = "wsnn", algorithm = 1, resolution = 0.1, verbose = FALSE)

# Find DimPlot_weighted_nn
DimPlot_weighted_nn <- DimPlot(hypotha.2, reduction = 'wnn.umap', label = TRUE, repel = TRUE, label.size = 2.5,cols=colour) + ggtitle("WNN Clusters M1")+ NoLegend()

#####################################################################################
# FindClusters_resolution
png(filename=paste(output_dir,"DimPlot_weighted_nn.png",sep=""), width = 12, height = 12, res=600, units = "cm")
	DimPlot_weighted_nn
dev.off()
#####################################################################################
# Annotating cell types 
# Create reference 
hypotha.rna.merge.samples=cDNA_M1.hypotha.combined
#####################################################################################
# Calculate NormalizeData
hypotha.rna.merge.samples <- NormalizeData(hypotha.rna.merge.samples, normalization.method = "LogNormalize", scale.factor = 10000)
# Calculate FindVariableFeatures
hypotha.varialble.rna <- FindVariableFeatures(object=hypotha.rna.merge.samples , selection.method = "vst",nfeatures = 3000) # Consider the 2000 genes
# Diet Seurat - keep only data on the seurat object
#hypotha.rna.merge.samples<-DietSeurat(hypotha.rna.merge.samples,counts = FALSE,data = TRUE,scale.data = FALSE, assays = "RNA", dimreducs = FALSE,   graphs = FALSE, misc = FALSE)
# Scale data
hypotha.rna.merge.samples <- SCTransform(hypotha.rna.merge.samples)
hypotha.rna.merge.samples<- ScaleData(hypotha.rna.merge.samples,block.size = 1000,do.scale = TRUE,do.center = TRUE,features=VariableFeatures(object = hypotha.varialble.rna))
# Run PCA
hypotha.rna.merge.samples <- RunPCA(hypotha.rna.merge.samples, features = VariableFeatures(object = hypotha.varialble.rna))
# Run Harmony
#hypotha.rna.merge.samples <- RunHarmony(hypotha.rna.merge.samples, group.by.vars = c('Sex'),reduction = "pca", assay.use = "RNA", reduction.save = "harmony")
# Run UMAP
#hypotha.rna.merge.samples <- RunUMAP(hypotha.rna.merge.samples, dims = 1:50,reduction = "harmony") # Optmize number of dimensions  ElbowPlot =10,15
hypotha.rna.merge.samples <- RunUMAP(hypotha.rna.merge.samples, dims = 1:50,reduction = "pca") # Optmize number of dimensions  ElbowPlot =10,15
# Run FindNeighbors
#hypotha.rna.merge.samples <- FindNeighbors(hypotha.rna.merge.samples, dims = 1:50,reduction = "harmony") # Optmize number of dimensions  ElbowPlot =10,15
hypotha.rna.merge.samples <- FindNeighbors(hypotha.rna.merge.samples, dims = 1:50) # Optmize number of dimensions  ElbowPlot =10,15
#####################################################################################
# Step 1 : Output hypotha.rna.merge.samples
# Data is being normalized and 3000 variable genes are further considered. Data is then scaled to be used in PCA, UMAP and FindNeighbors.
# Important to note now, there is only one sample therefore batch correction is commented out.
#####################################################################################
# Run FindNeighbors
# Run FindClusters # Find clusters for only RNA
hypotha.rna.merge.samples <- FindClusters(hypotha.rna.merge.samples,reduction = "pca",resolution = 0.12)

DefaultAssay(hypotha.rna.merge.samples) <- "RNA"
clustavg<-AverageExpression(hypotha.rna.merge.samples)
clustdf<-as.data.frame(clustavg$RNA)
clustdf<-t(clustdf)
clustdf<-as_tibble(clustdf, rownames = "cluster")
marks<-c("Prr5l","St18","Syt1","Mog","Snap25","1700016P03Rik","1700047M11Rik","4930447C04Rik","6330403K07Rik","9630013A20Rik","Adam23","Adcyap1","Agrp","Agt","Apod","Apoe","Arhgap36","Arpp21","Atp1a2","Auts2","Avp","B230216N24Rik","Baiap2","Bcas1","C130073E24Rik","C1qa","C1qb","C1qc","C1ql1","C1ql3","Caly","Camkv","Caprin2","Cartpt","Cbln1","Ccdc136","Cck","Ccn3","Cd9","Cdh23","Celf2","Chrm3","Cit","Cited1","Cldn10","Cldn11","Cntnap5a","Col11a1","Col11a2","Col18a1","Col24a1","Col25a1","Coro6","Cpne7","Cpne9","Crhbp","Cryab","Csf1r","Csf2rb2","Cspg4","Cst3","Ctss","Cyp11a1","Dclk1","Ddc","Dgkb","Dlk1","Ebf1","Ecel1","Egr1","Elavl2","En1","Epha10","Esyt3","Fars2","Fign","Fos","Fxyd6","Gabra1","Gad1","Gad2","Gal","Ghrh","Gja1","Gjc3","Gm20515","Gm20751","Gm26771","Gm26871","Gm49359","Gpr17","Gpr37l1","Grip1","Grip2","Grp","Hbb-bs","Hcrt","Hcrtr2","Hdc","Hexb","Hmcn1","Htr2c","Icam5","Igfbp2","Igfbp5","Isl1","Itih3","Itm2a","Junb","Kcnc1","Kcnc2","Kcnk2","Kctd16","Lhx9","Lmnb2","Mag","Magel2","Mal","Matn4","Mbp","Meis2","Mgp","Mia","Mir99ahg","Mobp","Mrpl9","Msrb2","Neat1","Nefm","Nfasc","Nkx2-1","Nme7","Nms","Nnat","Npy","Npy1r","Nrgn","Nrn1","Nrxn3","Ntm","Ntng1","Nts","Ntsr2","Nxph4","Olig1","Otp","Oxt","Parpbp","Pbx1","Pcsk2","Pde10a","Pdgfra","Penk","Pitx2","Pla2g7","Plagl1","Pld4","Plp1","Pmch","Pnoc","Pomc","Pou3f2","Prkcd","Prxl2c","Ptbp3","Ptgds","Pthlh","Ptn","Ptpn3","Ptprn","Ptprz1","Pvalb","Qk","Rasal1","Rasgef1c","Rasgrf2","Rbms1","Resp18","Rinl","Rmst","Rorb","Rprm","Rprml","Rrad","Rreb1","S100a6","Scg2","Scrg1","Selplg","Serpine2","Sfrp2","Sgk1","Sim1","Sirt2","Six3","Slc10a4","Slc18a2","Slc32a1","Slc35d3","Slc6a11","Slc6a3","Sncg","Sparc","Sphkap","Sst","Syt7","Tac1","Tbx3os1","Tcf4","Tcf7l2","Tent5a","Th","Tiam2","Tmcc3","Tmem100","Tmem130","Tnxb","Traip","Trem2","Trf","Trh","Tspan7","Ubash3b","Unc13c","Vgf","Vip","Vipr2","Vstm2l","Vtn","Wfs1","Zbtb20")
marks = data.frame(marks)
colnames(marks)[1] = "Gene"
df2<- clustdf %>% dplyr::select("cluster",marks$Gene) 
df2$orig_cluster<-df2$cluster
df2$ID<-NA
	
# Neurônios, astrocitos, oligodendrocitos, OPCs e células imune/micróglia
df2<- df2 %>% mutate(ID = ifelse(Snap25 > 1, "Neurons", df2$ID))
df2<- df2 %>% mutate(ID = ifelse(Agt > 2, "Astrocytes", df2$ID))
df2<- df2 %>% mutate(ID = ifelse(Ctss > 1, "Microglia", df2$ID)) # Ok
df2<- df2 %>% mutate(ID = ifelse(Pdgfra > 2, "OPCs", df2$ID))    # Ok
df2<- df2 %>% mutate(ID = ifelse(Mbp > 6 & Mobp > 6, "Oligodendrocytes", df2$ID))

y<-dplyr::select(df2,cluster)
Idents(hypotha.rna.merge.samples)<-plyr::mapvalues(Idents(hypotha.rna.merge.samples), from = df2$cluster, to = df2$ID)
hypotha.rna.merge.samples$group<-Idents(hypotha.rna.merge.samples)
reference=hypotha.rna.merge.samples
#####################################################################################
save(reference, file = "./reference.RData") # Save hypotha Step 5
#####################################################################################
# Annotating cell types 
Idents(hypotha) <- Idents(reference)

# FindClusters_resolution
png(filename=paste(output_dir,"joint_UMAP_visualization.png",sep=""), width = 12, height = 12, res=600, units = "cm")
	DimPlot(hypotha, label = TRUE, repel = TRUE, reduction = "wnn.umap") + NoLegend()
dev.off()
#####################################################################################
# Step 2 : Output hypotha.rna.merge.samples.
# Markers and markers limits were previously defined here used to calculate the celltypes.
#####################################################################################
# Process seurat on hypotha.atac.merge.samples
ATAC_M1_hypotha.combined <- RunTFIDF(ATAC_M1_hypotha.combined)
ATAC_M1_hypotha.combined <- FindTopFeatures(ATAC_M1_hypotha.combined, min.cutoff = "q0")
ATAC_M1_hypotha.combined <- RunSVD(ATAC_M1_hypotha.combined)
ATAC_M1_hypotha.combined <- RunUMAP(ATAC_M1_hypotha.combined, reduction = "lsi", dims = 2:30, reduction.name = "umap", reduction.key = "UMAP_1")

ATAC_M1_hypotha.combined <- NormalizeData(ATAC_M1_hypotha.combined)
ATAC_M1_hypotha.combined <- ScaleData(ATAC_M1_hypotha.combined, features = rownames(ATAC_M1_hypotha.combined))

# quantify gene activity
gene.activities <- GeneActivity(ATAC_M1_hypotha.combined, features = VariableFeatures(reference))

# add gene activities as a new assay
ATAC_M1_hypotha.combined[["ACTIVITY"]] <- CreateAssayObject(counts = gene.activities)

# normalize gene activities
DefaultAssay(ATAC_M1_hypotha.combined) <- "ACTIVITY"
ATAC_M1_hypotha.combined <- NormalizeData(ATAC_M1_hypotha.combined)
ATAC_M1_hypotha.combined <- ScaleData(ATAC_M1_hypotha.combined, features = rownames(ATAC_M1_hypotha.combined))

# Identify anchors
transfer.anchors <- FindTransferAnchors(reference = reference, query = ATAC_M1_hypotha.combined, features = VariableFeatures(object = pbmc.rna),
    reference.assay = "RNA", query.assay = "ACTIVITY", reduction = "cca")
    
celltype.predictions <- TransferData(anchorset = transfer.anchors, refdata = reference$idents,
    weight.reduction = ATAC_M1_hypotha.combined[["lsi"]], dims = 2:30)

ATAC_M1_hypotha.combined <- AddMetaData(ATAC_M1_hypotha.combined, metadata = celltype.predictions)    

#####################################################################################
# Step 3 : Output hypotha.atac.merge.samples.
# RunTFIDF, FindTopFeatures and RunSVD are used for RunUMAP.

#####################################################################################
save(hypotha, file = "./hypotha.RData")
#####################################################################################
colour=c('Astrocytes' ='#fde725','OPCs' ='#5ec962','Microglia' ='#21918c','Neurons'='#3b528b','Oligodendrocytes'='#440154')
DimPlot_Multim_rna_atac <- DimPlot(hypotha, label = TRUE, repel = TRUE, reduction = "wnn.umap",cols=colour) + NoLegend() + ggtitle("Multimodal cDNA-M1/ATAC-M1")
DimPlot_weighted_nn
DimPlot_RNA <- DimPlot(hypotha.rna.merge.samples, group.by = "ident", label = TRUE,cols=colour)  + ggtitle("RNA cDNA-M1") + NoLegend()
DimPlot_ATAC <- DimPlot(ATAC_M1_hypotha.combined, group.by = "ident", label = TRUE,cols="#3b528b") + ggtitle("ATAC ATAC-M1") + NoLegend()

# FindClusters_resolution
png(filename=paste(output_dir,"joint_UMAP_visualization.png",sep=""), width = 24, height = 24, res=600, units = "cm")
	grid.arrange(DimPlot_RNA,DimPlot_ATAC,DimPlot_Multim_rna_atac,DimPlot_weighted_nn,ncol = 2)
dev.off()
#####################################################################################
# Linking peaks to genes 
DefaultAssay(hypotha) <- "ATAC"

library(BSgenome.Mmusculus.UCSC.mm10)


# first compute the GC content for each peak
hypotha <- RegionStats(hypotha, genome = BSgenome.Mmusculus.UCSC.mm10)

# link peaks to genes
hypotha <- LinkPeaks(
  object = hypotha,
  peak.assay = "ATAC",
  expression.assay = "SCT",
  genes.use = c("Snap25", "Agt","Ctss","Pdgfra","Mbp","Mobp")
)

idents.plot <- c("Neurons", "Astrocytes", "Microglia",
                 "OPCs", "Oligodendrocytes")

p1 <- CoveragePlot(
  object = hypotha,
  region = "Snap25",
  features = "Snap25",
  expression.assay = "SCT",
  idents = idents.plot,
  extend.upstream = 500,
  extend.downstream = 10000
)

# FindClusters_resolution
png(filename=paste(output_dir,"CoveragePlot_p1.png",sep=""), width = 24, height = 12, res=600, units = "cm")
	p1
dev.off()
